##
##  This file is part of Siena, a wide-area event notification system.
##  See http://www.cs.colorado.edu/serl/siena/
##
##  Author: Antonio Carzaniga <carzanig@cs.colorado.edu>
##  See the file AUTHORS for full details. 
##
##  Copyright (C) 1998-2002 University of Colorado
##
##  This program is free software; you can redistribute it and/or
##  modify it under the terms of the GNU General Public License
##  as published by the Free Software Foundation; either version 2
##  of the License, or (at your option) any later version.
##
##  This program is distributed in the hope that it will be useful,
##  but WITHOUT ANY WARRANTY; without even the implied warranty of
##  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
##  GNU General Public License for more details.
##
##  You should have received a copy of the GNU General Public License
##  along with this program; if not, write to the Free Software
##  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
##  USA, or send email to serl@cs.colorado.edu.
## 
## 
## $Id: configure.in,v 1.5 2002/06/12 22:35:08 carzanig Exp $
##
AC_INIT(VERSION)
echo //
echo // Configuring Siena server...
echo //
echo // Please contact Antonio Carzaniga \<carzanig@cs.colorado.edu\>
echo // if you have problems configuring or compiling Siena server
echo //
AC_CONFIG_HEADER(sienaserverconf.h:sienaserverconf.in)
AC_PREFIX_DEFAULT(/opt)
#
# first of all let's define SIENASERVERVERSION
#
AC_MSG_CHECKING(Siena server version)
VERSION=`cat $srcdir/VERSION`
AC_DEFINE_UNQUOTED(SIENASERVERVERSION, "${VERSION}")
AC_SUBST(VERSION)
AC_MSG_RESULT($VERSION)

AC_PROG_MAKE_SET

AC_PROG_CXX
AC_PATH_PROG(RM, rm, $FALSE)
AC_PATH_PROG(TAR, tar, $FALSE)

AC_LANG_CPLUSPLUS
AC_ANTO_CXX_NAMESPACES
AC_ANTO_CXX_EXCEPTIONS
if test "$ac_cv_anto_cxx_exceptions" != yes; then
    AC_MSG_ERROR(Siena needs a c++ that handles exceptions!)
fi

AC_PROG_INSTALL

AC_ANTO_MKPATH(AC_MSG_ERROR(need a method for creating paths))

AC_CHECK_FUNC(getdtablesize, AC_DEFINE(HAVE_GETDTABLESIZE))
AC_CHECK_FUNCS(getpgrp setsid)
AC_FUNC_GETPGRP

AC_ANTO_SEARCH_LIBS(gethostbyname, nsl socket)
AC_ANTO_SEARCH_LIBS(socket, socket)

AC_TYPE_PID_T

AC_ANTO_TIOCNOTTY

AC_ANTO_SIENA( , AC_MSG_ERROR([
  You need the Siena library.  
  You may tell 'configure' where to find it by specifying:
     --with-siena-include=dir
     --with-siena-libdir=dir
     --with-siena-libs=libs (default='-lsiena -lmonitor')  
  ]))

AC_ANTO_PTHREADS([
    AC_ANTO_PTHREAD_RWLOCK
    AC_ANTO_PTHREAD_YIELD
  ], AC_MSG_ERROR([
  Siena server needs a POSIX 1.c threads library.
  You may tell 'configure' where to find it by specifying:
     --with-pthread-include=dir
     --with-pthread-libdir=dir
     --with-pthread-libs=libs (default='-lpthread')  
  ]))

AC_ANTO_GDBM( , AC_MSG_ERROR([
  Siena server needs the GNU gdbm library.
  You may tell 'configure' where to find it by specifying:
     --with-gdbm-include=dir
     --with-gdbm-libdir=dir
     --with-gdbm-libs=libs (default='-lgdbm')  
  ]))

dnl 
AC_OUTPUT(Makefile tests/Makefile tests/config)
echo //
echo // now you can type \`make\' to compile Siena server... good luck!
echo //
